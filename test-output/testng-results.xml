<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
    <line>
      <![CDATA[TestA test started...]]>
    </line>
    <line>
      <![CDATA[loginTest test started...]]>
    </line>
    <line>
      <![CDATA[loginTest test passed...]]>
    </line>
    <line>
      <![CDATA[TestA test finished...]]>
    </line>
    <line>
      <![CDATA[TestB test started...]]>
    </line>
    <line>
      <![CDATA[loginTestB test started...]]>
    </line>
    <line>
      <![CDATA[loginTestB test failed...java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[TestB test finished...]]>
    </line>
    <line>
      <![CDATA[TestC test started...]]>
    </line>
    <line>
      <![CDATA[loginTestC test started...]]>
    </line>
    <line>
      <![CDATA[loginTestC test failed...java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[TestC test finished...]]>
    </line>
    <line>
      <![CDATA[TestScreenShot test started...]]>
    </line>
    <line>
      <![CDATA[testScreen test started...]]>
    </line>
    <line>
      <![CDATA[testScreen test passed...]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/shadmanshahriyar/Documents/qaClass/java/newJava/dunkin/test-output/screenshots/testScreen_37-24-2018_06:37:09.png'><img src='/Users/shadmanshahriyar/Documents/qaClass/java/newJava/dunkin/test-output/screenshots/testScreen_37-24-2018_06:37:09.png' height='100' width='100'/></a>]]>
    </line>
  </reporter-output>
  <suite name="regressionSuite" duration-ms="7207" started-at="2018-10-24T22:37:04Z" finished-at="2018-10-24T22:37:11Z">
    <groups>
    </groups>
    <test name="TestA" duration-ms="37" started-at="2018-10-24T22:37:04Z" finished-at="2018-10-24T22:37:04Z">
      <class name="com.dunkin.TestA">
        <test-method status="PASS" signature="loginTest()[pri:0, instance:com.dunkin.TestA@2286778]" name="loginTest" duration-ms="7" started-at="2018-10-24T18:37:04Z" finished-at="2018-10-24T18:37:04Z">
          <reporter-output>
            <line>
              <![CDATA[loginTest test started...]]>
            </line>
            <line>
              <![CDATA[loginTest test passed...]]>
            </line>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- com.dunkin.TestA -->
    </test> <!-- TestA -->
    <test name="TestB" duration-ms="12" started-at="2018-10-24T22:37:04Z" finished-at="2018-10-24T22:37:04Z">
      <class name="com.dunkin.TestB">
        <test-method status="FAIL" signature="loginTestB()[pri:0, instance:com.dunkin.TestB@5bc79255]" name="loginTestB" duration-ms="3" started-at="2018-10-24T18:37:04Z" finished-at="2018-10-24T18:37:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertTrue(Assert.java:44)at org.testng.Assert.assertTrue(Assert.java:54)at com.dunkin.TestB.loginTestB(TestB.java:15)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[loginTestB test started...]]>
            </line>
            <line>
              <![CDATA[loginTestB test failed...java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- loginTestB -->
      </class> <!-- com.dunkin.TestB -->
    </test> <!-- TestB -->
    <test name="TestC" duration-ms="8" started-at="2018-10-24T22:37:04Z" finished-at="2018-10-24T22:37:04Z">
      <class name="com.dunkin.TestC">
        <test-method status="FAIL" signature="loginTestC()[pri:0, instance:com.dunkin.TestC@3701eaf6]" name="loginTestC" duration-ms="3" started-at="2018-10-24T18:37:04Z" finished-at="2018-10-24T18:37:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertTrue(Assert.java:44)at org.testng.Assert.assertTrue(Assert.java:54)at com.dunkin.TestC.loginTestC(TestC.java:15)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[loginTestC test started...]]>
            </line>
            <line>
              <![CDATA[loginTestC test failed...java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- loginTestC -->
      </class> <!-- com.dunkin.TestC -->
    </test> <!-- TestC -->
    <test name="TestScreenShot" duration-ms="7114" started-at="2018-10-24T22:37:04Z" finished-at="2018-10-24T22:37:11Z">
      <class name="com.dunkin.shadman.onlineStore.testScripts.TestScreenShot">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3]" name="beforeSuite" is-config="true" duration-ms="204" started-at="2018-10-24T18:37:04Z" finished-at="2018-10-24T18:37:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3]" name="beforeTest" is-config="true" duration-ms="2491" started-at="2018-10-24T18:37:04Z" finished-at="2018-10-24T18:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3]" name="beforeClass" is-config="true" duration-ms="26" started-at="2018-10-24T18:37:06Z" finished-at="2018-10-24T18:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3]" name="beforeMethod" is-config="true" duration-ms="11" started-at="2018-10-24T18:37:06Z" finished-at="2018-10-24T18:37:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.dunkin.shadman.onlineStore.testScripts.TestScreenShot.testScreen()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testScreen()[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3]" name="testScreen" duration-ms="2900" started-at="2018-10-24T18:37:06Z" finished-at="2018-10-24T18:37:09Z">
          <reporter-output>
            <line>
              <![CDATA[testScreen test started...]]>
            </line>
            <line>
              <![CDATA[testScreen test passed...]]>
            </line>
          </reporter-output>
        </test-method> <!-- testScreen -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3]" name="afterMethod" is-config="true" duration-ms="1526" started-at="2018-10-24T18:37:09Z" finished-at="2018-10-24T18:37:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScreen status=SUCCESS method=TestScreenShot.testScreen()[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3] output=testScreen test started...]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='/Users/shadmanshahriyar/Documents/qaClass/java/newJava/dunkin/test-output/screenshots/testScreen_37-24-2018_06:37:09.png'><img src='/Users/shadmanshahriyar/Documents/qaClass/java/newJava/dunkin/test-output/screenshots/testScreen_37-24-2018_06:37:09.png' height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.dunkin.shadman.onlineStore.testScripts.TestScreenShot@7c29daf3]" name="afterTest" is-config="true" duration-ms="150" started-at="2018-10-24T18:37:11Z" finished-at="2018-10-24T18:37:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.dunkin.shadman.onlineStore.testScripts.TestScreenShot -->
    </test> <!-- TestScreenShot -->
  </suite> <!-- regressionSuite -->
</testng-results>
